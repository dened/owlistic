// Mocks generated by Mockito 5.4.6 from annotations
// in owlistic/test/context_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:owlistic/src/database.dart' as _i3;
import 'package:owlistic/src/dto/cetrificate_entity.dart' as _i9;
import 'package:owlistic/src/dto/search_info.dart' as _i8;
import 'package:owlistic/src/telegram_bot/telegram_bot.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMigrationStrategy_0 extends _i1.SmartFake implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIndex_2 extends _i1.SmartFake implements _i2.Index {
  _FakeIndex_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrigger_3 extends _i1.SmartFake implements _i2.Trigger {
  _FakeTrigger_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchInfo_4 extends _i1.SmartFake implements _i3.SearchInfo {
  _FakeSearchInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCertification_5 extends _i1.SmartFake implements _i3.Certification {
  _FakeCertification_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKvTable_6 extends _i1.SmartFake implements _i3.KvTable {
  _FakeKvTable_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$DatabaseManager_7 extends _i1.SmartFake implements _i3.$DatabaseManager {
  _Fake$DatabaseManager_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_8 extends _i1.SmartFake implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_9 extends _i1.SmartFake implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_10 extends _i1.SmartFake implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_11 extends _i1.SmartFake implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_12 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_13 extends _i1.SmartFake implements _i4.StreamQueryStore {
  _FakeStreamQueryStore_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_14 extends _i1.SmartFake implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_15 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_16<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_17<T1 extends _i2.Table, D1> extends _i1.SmartFake implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_18<T extends _i2.Table, D> extends _i1.SmartFake implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_19<T1 extends _i2.HasResultSet, D> extends _i1.SmartFake
    implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_20<FirstT extends _i2.HasResultSet, FirstD> extends _i1.SmartFake
    implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseSelectStatement_21<Row> extends _i1.SmartFake implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_22<T1 extends _i2.Table, D1> extends _i1.SmartFake implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_23<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_24 extends _i1.SmartFake implements _i2.GenerationContext {
  _FakeGenerationContext_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TelegramBot].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelegramBot extends _i1.Mock implements _i6.TelegramBot {
  MockTelegramBot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void addHandler(_i6.OnUpdateHandler? handler) => super.noSuchMethod(
        Invocation.method(
          #addHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeHandler(_i6.OnUpdateHandler? handler) => super.noSuchMethod(
        Invocation.method(
          #removeHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<int> sendMessage(
    int? chatId,
    String? text, {
    bool? disableNotification = true,
    bool? protectContent = false,
    bool? autoEscapeMarkdown = true,
    _i6.ParseMode? parseMode = _i6.ParseMode.markdownV2,
    Map<String, Object?>? replyMarkup,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [
            chatId,
            text,
          ],
          {
            #disableNotification: disableNotification,
            #protectContent: protectContent,
            #autoEscapeMarkdown: autoEscapeMarkdown,
            #parseMode: parseMode,
            #replyMarkup: replyMarkup,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> deleteMessage(
    int? chatId,
    int? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            chatId,
            messageId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteMessages(
    int? chatId,
    Set<int>? messageIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessages,
          [
            chatId,
            messageIds,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> sendInlineKeyboard(
    int? chatId,
    String? text,
    List<List<_i6.InlineKeyboardButton>>? buttons, {
    bool? disableNotification = true,
    bool? protectContent = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendInlineKeyboard,
          [
            chatId,
            text,
            buttons,
          ],
          {
            #disableNotification: disableNotification,
            #protectContent: protectContent,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> sendReplyKeyboard(
    int? chatId,
    String? text,
    List<List<_i6.InlineKeyboardButton>>? buttons, {
    bool? resizeKeyboard = true,
    bool? oneTimeKeyboard = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendReplyKeyboard,
          [
            chatId,
            text,
            buttons,
          ],
          {
            #resizeKeyboard: resizeKeyboard,
            #oneTimeKeyboard: oneTimeKeyboard,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> sendReplyKeyboardRemove(
    int? chatId,
    String? text, {
    bool? selective = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendReplyKeyboardRemove,
          [
            chatId,
            text,
          ],
          {#selective: selective},
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> answerCallbackQuery(
    String? callbackQueryId,
    String? text, {
    bool? arlert = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #answerCallbackQuery,
          [
            callbackQueryId,
            text,
          ],
          {#arlert: arlert},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void start(
          {Set<String>? types = const {
            'message',
            'callback_query',
          }}) =>
      super.noSuchMethod(
        Invocation.method(
          #start,
          [],
          {#types: types},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stop() => super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i3.Database {
  MockDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);

  @override
  _i2.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_0(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i2.MigrationStrategy);

  @override
  _i3.User get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeUser_1(
          this,
          Invocation.getter(#user),
        ),
      ) as _i3.User);

  @override
  _i2.Index get userMetaCreatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#userMetaCreatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#userMetaCreatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Index get userMetaUpdatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#userMetaUpdatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#userMetaUpdatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Trigger get userUpdateTrigger => (super.noSuchMethod(
        Invocation.getter(#userUpdateTrigger),
        returnValue: _FakeTrigger_3(
          this,
          Invocation.getter(#userUpdateTrigger),
        ),
      ) as _i2.Trigger);

  @override
  _i3.SearchInfo get searchInfo => (super.noSuchMethod(
        Invocation.getter(#searchInfo),
        returnValue: _FakeSearchInfo_4(
          this,
          Invocation.getter(#searchInfo),
        ),
      ) as _i3.SearchInfo);

  @override
  _i2.Index get searchInfoMetaCreatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#searchInfoMetaCreatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#searchInfoMetaCreatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Index get searchInfoMetaUpdatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#searchInfoMetaUpdatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#searchInfoMetaUpdatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Index get searchInfoUserIdIdx => (super.noSuchMethod(
        Invocation.getter(#searchInfoUserIdIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#searchInfoUserIdIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Trigger get searchInfoUpdateTrigger => (super.noSuchMethod(
        Invocation.getter(#searchInfoUpdateTrigger),
        returnValue: _FakeTrigger_3(
          this,
          Invocation.getter(#searchInfoUpdateTrigger),
        ),
      ) as _i2.Trigger);

  @override
  _i3.Certification get certification => (super.noSuchMethod(
        Invocation.getter(#certification),
        returnValue: _FakeCertification_5(
          this,
          Invocation.getter(#certification),
        ),
      ) as _i3.Certification);

  @override
  _i2.Index get certificationMetaCreatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#certificationMetaCreatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#certificationMetaCreatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Index get certificationSearchInfoIdIdx => (super.noSuchMethod(
        Invocation.getter(#certificationSearchInfoIdIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#certificationSearchInfoIdIdx),
        ),
      ) as _i2.Index);

  @override
  _i3.KvTable get kvTable => (super.noSuchMethod(
        Invocation.getter(#kvTable),
        returnValue: _FakeKvTable_6(
          this,
          Invocation.getter(#kvTable),
        ),
      ) as _i3.KvTable);

  @override
  _i2.Index get kvMetaCreatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#kvMetaCreatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#kvMetaCreatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Index get kvMetaUpdatedAtIdx => (super.noSuchMethod(
        Invocation.getter(#kvMetaUpdatedAtIdx),
        returnValue: _FakeIndex_2(
          this,
          Invocation.getter(#kvMetaUpdatedAtIdx),
        ),
      ) as _i2.Index);

  @override
  _i2.Trigger get kvTableUpdateTrigger => (super.noSuchMethod(
        Invocation.getter(#kvTableUpdateTrigger),
        returnValue: _FakeTrigger_3(
          this,
          Invocation.getter(#kvTableUpdateTrigger),
        ),
      ) as _i2.Trigger);

  @override
  _i3.$DatabaseManager get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: _Fake$DatabaseManager_7(
          this,
          Invocation.getter(#managers),
        ),
      ) as _i3.$DatabaseManager);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables => (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
      ) as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i2.DatabaseSchemaEntity>[],
      ) as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_8(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i2.StreamQueryUpdateRules);

  @override
  _i2.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_9(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i2.GeneratedDatabase);

  @override
  _i2.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_10(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.DriftDatabaseOptions);

  @override
  _i2.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_11(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i7.dummyValue<_i2.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_12(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i2.QueryExecutor);

  @override
  _i4.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_13(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i4.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_14(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i2.DatabaseConnectionUser);

  @override
  _i2.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_15(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i2.Migrator);

  @override
  _i5.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<T> createStream<T extends Object>(_i4.QueryStreamFetcher<T>? stmt) => (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i5.Stream<T>.empty(),
      ) as _i5.Stream<T>);

  @override
  T alias<T, D>(
    _i2.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i7.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) => super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Stream<Set<_i2.TableUpdate>> tableUpdates([_i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i5.Stream<Set<_i2.TableUpdate>>.empty(),
      ) as _i5.Stream<Set<_i2.TableUpdate>>);

  @override
  _i5.Future<T> doWhenOpened<T>(_i5.FutureOr<T> Function(_i2.QueryExecutor)? fn) => (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_16<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(_i2.TableInfo<T, D>? table) => (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_17<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(_i2.TableInfo<Tbl, R>? table) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_18<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_19<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_20<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(Iterable<_i2.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_21<_i2.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(_i2.TableInfo<T, D>? table) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_22<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i2.DeleteStatement<T, D>);

  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
      ) as _i5.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_23<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_23<_i2.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i2.Selectable<_i2.QueryRow>);

  @override
  _i5.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_16<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<T> exclusively<T>(_i5.Future<T> Function()? action) => (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_16<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i2.Batch)? runInBatch) => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T> runWithInterceptor<T>(
    _i5.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i7.ifNotNull(
              _i7.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_16<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_24(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_24(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i2.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i5.Future<List<_i8.SearchInfo>> getSearchInfo(int? chatId) => (super.noSuchMethod(
        Invocation.method(
          #getSearchInfo,
          [chatId],
        ),
        returnValue: _i5.Future<List<_i8.SearchInfo>>.value(<_i8.SearchInfo>[]),
      ) as _i5.Future<List<_i8.SearchInfo>>);

  @override
  _i5.Future<List<_i8.SearchInfo>> getAllSearchInfo() => (super.noSuchMethod(
        Invocation.method(
          #getAllSearchInfo,
          [],
        ),
        returnValue: _i5.Future<List<_i8.SearchInfo>>.value(<_i8.SearchInfo>[]),
      ) as _i5.Future<List<_i8.SearchInfo>>);

  @override
  _i5.Future<int> deleteAllSearchInfo(int? chatId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAllSearchInfo,
          [chatId],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> deleteSearchInfo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSearchInfo,
          [id],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> saveCertificate({
    required int? searchInfoId,
    required String? link,
    required _i9.CertificateEntity? entity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCertificate,
          [],
          {
            #searchInfoId: searchInfoId,
            #link: link,
            #entity: entity,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  T? getKey<T extends Object>(String? key) => (super.noSuchMethod(Invocation.method(
        #getKey,
        [key],
      )) as T?);

  @override
  void setKey(
    String? key,
    Object? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setKey,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeKey(String? key) => super.noSuchMethod(
        Invocation.method(
          #removeKey,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, Object?> getAll([Set<String>? keys]) => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [keys],
        ),
        returnValue: <String, Object?>{},
      ) as Map<String, Object?>);

  @override
  void setAll(Map<String, Object?>? data) => super.noSuchMethod(
        Invocation.method(
          #setAll,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAll([Set<String>? keys]) => super.noSuchMethod(
        Invocation.method(
          #removeAll,
          [keys],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> saveUser({
    required int? id,
    String? firstName,
    String? lastName,
    String? username,
    String? languageCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [],
          {
            #id: id,
            #firstName: firstName,
            #lastName: lastName,
            #username: username,
            #languageCode: languageCode,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
